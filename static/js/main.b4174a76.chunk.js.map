{"version":3,"sources":["App.js","serviceWorker.js","index.js","eng.jpg"],"names":["App","react_default","a","createElement","className","id","style","color","href","target","src","photo","alt","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"yOA4CeA,0LAtCX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeC,GAAG,aAC/BJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKE,GAAG,UACNJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAYE,MAAO,CAAEC,MAAO,UAA1C,mCAEFN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGG,MAAO,CAAEC,MAAO,SAAUC,KAAK,8BAA8BC,OAAO,UAAUR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAA9F,aADF,IAEEH,EAAAC,EAAAC,cAAA,KAAGG,MAAO,CAAEC,MAAO,SAAUC,KAAK,kCAAkCC,OAAO,UAAUR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAlG,aAFF,IAGEH,EAAAC,EAAAC,cAAA,KAAGG,MAAO,CAAEC,MAAO,SAAUC,KAAK,0KAA0KC,OAAO,UAAnN,IAA6NR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAA1O,YAGFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BC,GAAG,QAAQK,IAAKC,IAAOC,IAAI,cACrEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBC,GAAG,OACpCJ,EAAAC,EAAAC,cAAA,KAAGG,MAAO,CAAEC,MAAO,UAAnB,6HACwCN,EAAAC,EAAAC,cAAA,KAAGG,MAAO,CAAEC,MAAO,UAAnB,uYAIxCN,EAAAC,EAAAC,cAAA,KAAGG,MAAO,CAAEC,MAAO,UAAnB,mNAGAN,EAAAC,EAAAC,cAAA,KAAGG,MAAO,CAAEC,MAAO,UAAnB,gqBAzBIM,cCQEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnB,EAAAC,EAAAC,cAACkB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.b4174a76.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport photo from './eng.jpg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className='ui container' id=\"container\">\n          <div>\n            <div id=\"header\">\n              <h1 className=\"ui header\" style={{ color: 'white'}}>Frida Casas, Software Engineer</h1>\n            </div>\n            <div>\n              <a style={{ color: 'white'}} href='https://github.com/free2580' target=\"_blank\" ><i className='github icon' /> Github  </a>|\n              <a style={{ color: 'white'}} href='https://medium.com/@fridakahsas' target=\"_blank\" ><i className='medium icon' /> Medium  </a>|\n              <a style={{ color: 'white'}} href='https://docs.google.com/presentation/d/e/2PACX-1vSfK_UMLxC6aSAwKG9UO1GSsQtWUBeflzc_4M9rXArLV_d4cMHnFIxeqb15LMrHTe5acvc17mEGDPuK/pub?start=false&loop=false&delayms=3000' target=\"_blank\"> <i className='file alternate outline' /> Resume</a>\n\n            </div>\n            <img className=\"ui medium circular image\" id=\"photo\" src={photo} alt=\"not-found\"/>\n            <div className=\"ui raised segment\" id=\"bio\">\n              <p style={{ color: 'white'}}>Hello. My name is Frida Casas. I am a passionate and driven full stack web developer\n              currently residing in New York City.</p><p style={{ color: 'white'}}>I have a little less than a year's worth of experience\n                on Ruby on Rails, Javascript, React, Redux, HTML and CSS. I come from a a variety of backgrounds including physics,\n                psychology, music theory and mixology, which have given me a well-rounded experience on how to tackle problem-solving,\n              event-management, and the continous drive to learn; a necessary attribute for software engineers.</p>\n              <p style={{ color: 'white'}}> In my experience teaching music, I learned syntax and linguistic pattern recognition. This\n              skill translated into code beautifully, facilitating debugging and allowing me to problem-solve in a timely manner.</p>\n\n              <p style={{ color: 'white'}}> After being introduced to the world of computer programming by some classmates during my\n                physics studies, I quickly found the focus and tenacity to make this shift in my career. This realization led me to\n                apply to one of NYC's finest web development bootcamps, where I quickly picked up a wide range of skills which have empowered\n                me to be able to create modern, dynamic web applications. I am determined to forever improve my programming skills, and aim to\n                  excel in any project or contribution I participate in. Becoming a web developer has been the easiest and best decision for\n                me- a sentiment anyone I get the pleasure of working with will surely note.</p>\n              </div>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/eng.bee45ef1.jpg\";"],"sourceRoot":""}